------------------------------------------------------------------------
This is the project README file. Here, you should describe your project.
Tell the reader (someone who does not know anything about this project)
all he/she needs to know. The comments should usually include at least:
------------------------------------------------------------------------

PROJECT TITLE: Poster Project
PURPOSE OF PROJECT: To make cool posters and to lag out computers.
VERSION or DATE: 5/16/22
AUTHORS: Alexander Wang
USER INSTRUCTIONS: If you decide(not recomended) Run the run.bat file.

The images are order left to right, up to down in numerical order. The effects are listed in the order that they were applied.
image 1: blend, invertColors, fadeToWhite, mirror, grayscale
image 2: fadeToWhite, invertColors
image 3: fadeToWhite, invertColors, mirror, flip
image 4: None
image 5: blend, flip, mirror, invertColors
image 6: fadeToWhite, grayscale
image 7: None
image 8: flip, mirror, blend, invertColors, fadeToWhite
image 9: grayscale, flip
image 10: fadeToWhite, grayscale, blend
image 11: grayscale, blend
image 12: invertColors, grayscale, fadeToWhite, blend, mirror
image 13: invertColors, grayscale, fadeToWhite, blend, flip
image 14: None
image 15: None
image 16: invertColors, fadeToWhite, flip, grayscale, mirror
image 17: mirror
image 18: grayscale, flip, blend
image 19: blend, mirror, invertColors, grayscale
image 20: mirror, blend, invertColors, fadeToWhite, flip
image 21: blend, grayscale, fadeToWhite, mirror
image 22: flip
image 23: mirror, grayscale, flip
image 24: mirror, fadeToWhite
image 25: None
image 26: blend, grayscale, invertColors, mirror
image 27: flip
image 28: fadeToWhite, grayscale, flip
image 29: blend, fadeToWhite, mirror, grayscale, flip
image 30: grayscale, invertColors, mirror, flip, fadeToWhite
image 31: grayscale, blend, invertColors, fadeToWhite, mirror
image 32: mirror, grayscale, flip
image 33: flip, grayscale
image 34: None
image 35: grayscale, mirror, flip
image 36: None
image 37: flip, fadeToWhite
image 38: grayscale, blend, fadeToWhite, flip
image 39: blend, flip, fadeToWhite, mirror, grayscale
image 40: flip, fadeToWhite
image 41: flip, mirror, fadeToWhite
image 42: flip, blend, fadeToWhite
image 43: blend, grayscale
image 44: grayscale, invertColors
image 45: blend, mirror, fadeToWhite
image 46: invertColors, mirror, blend
image 47: fadeToWhite
image 48: flip, mirror, grayscale, fadeToWhite, blend
image 49: grayscale, flip, invertColors, blend, mirror
image 50: None
image 51: invertColors
image 52: mirror, blend, fadeToWhite, grayscale, invertColors
image 53: invertColors, flip, fadeToWhite
image 54: blend, fadeToWhite, mirror, grayscale, invertColors
image 55: invertColors, grayscale
image 56: grayscale
image 57: None
image 58: mirror, blend, invertColors, fadeToWhite
image 59: grayscale, invertColors, blend, mirror
image 60: blend
image 61: None
image 62: flip, grayscale, blend
image 63: invertColors, mirror, blend
image 64: invertColors
image 65: grayscale, blend, invertColors, mirror, fadeToWhite
image 66: fadeToWhite, invertColors, grayscale, flip
image 67: invertColors
image 68: invertColors, mirror, fadeToWhite, flip
image 69: fadeToWhite, grayscale, invertColors, mirror
image 70: grayscale, blend, fadeToWhite, mirror, flip
image 71: flip, invertColors, blend, grayscale
image 72: flip, grayscale
image 73: None
image 74: fadeToWhite, invertColors
image 75: flip, blend, mirror, invertColors, grayscale
image 76: fadeToWhite, invertColors, flip
image 77: flip, fadeToWhite
image 78: grayscale
image 79: flip
image 80: None
image 81: grayscale, blend, flip, mirror
image 82: flip, invertColors
image 83: fadeToWhite, mirror, blend, invertColors
image 84: flip, blend, fadeToWhite, grayscale
image 85: invertColors, flip, blend, fadeToWhite
image 86: grayscale
image 87: blend
image 88: blend, invertColors
image 89: invertColors, mirror, blend, fadeToWhite, flip
image 90: None
image 91: fadeToWhite, grayscale, invertColors
image 92: invertColors, fadeToWhite, mirror, blend
image 93: flip
image 94: grayscale
image 95: mirror, invertColors
image 96: invertColors, blend, grayscale
image 97: grayscale
image 98: grayscale, blend, flip, mirror
image 99: invertColors, grayscale
image 100: flip, mirror, blend, invertColors, fadeToWhite
image 101: grayscale, fadeToWhite, mirror, flip
image 102: fadeToWhite
image 103: flip, fadeToWhite, blend, grayscale, mirror
image 104: invertColors, mirror, fadeToWhite
image 105: grayscale, mirror, blend, invertColors
image 106: grayscale, invertColors, flip
image 107: flip, fadeToWhite, grayscale, mirror
image 108: flip, grayscale, blend, fadeToWhite, mirror
image 109: mirror, flip, blend
image 110: invertColors, blend, grayscale, fadeToWhite
image 111: grayscale, invertColors, fadeToWhite, flip
image 112: invertColors, blend, mirror
image 113: flip
image 114: None
image 115: blend, grayscale, invertColors
image 116: None
image 117: mirror, invertColors, grayscale
image 118: grayscale, blend, flip, mirror, invertColors
image 119: flip, blend, grayscale
image 120: fadeToWhite, flip
image 121: grayscale, flip, invertColors
image 122: blend, fadeToWhite, mirror
image 123: fadeToWhite, flip, mirror, invertColors, blend
image 124: blend
image 125: mirror
image 126: None
image 127: mirror, flip, blend, fadeToWhite, invertColors
image 128: None
image 129: mirror
image 130: invertColors, grayscale, fadeToWhite, blend
image 131: grayscale, blend, invertColors, mirror, flip
image 132: fadeToWhite, mirror, blend, flip, grayscale
image 133: invertColors, fadeToWhite, blend, grayscale
image 134: blend, grayscale, flip, invertColors, fadeToWhite
image 135: blend, fadeToWhite, grayscale, flip
image 136: grayscale, fadeToWhite, mirror, invertColors
image 137: invertColors, mirror, grayscale
image 138: invertColors, fadeToWhite, flip
image 139: invertColors, mirror
image 140: mirror, invertColors, grayscale
image 141: None
image 142: fadeToWhite, mirror, grayscale
image 143: invertColors, grayscale, mirror
image 144: flip, grayscale, blend

Operation explinations

The poster is composed of 144 images, in an array of 9 by 16. Each image is given a random amount of random effects. 
There are a total of 10 effects, though only 6 can be applied. This is because the mirror has 4 variations and the 
flip has 2. The effects are mirrorVerticalLeft,  mirrorVerticalRight, mirrorHorizontalLeft, mirrorHorizontalRight, 
FlipVertical, FlipHorizontal, Grayscale, invertColors, blend, and fadeToWhite.

Operations
Mirror
All variations of the mirror function uses two nested loops to go through each Pixel on half of the image and copies 
the rgb values the the corresponding Pixel on the other side of the image.

Flip
	All variations of the Flip method uses two nested loops that go through half of the image, saving the 
initial Color, copying the corresponding Pixel’s Color to the original one, and then finally setting the second 
Pixel to the saved Color.

Grayscale
	The grayscale function uses nested loops to go through each Pixel. The function then takes the rgb values, 
and uses a formula that is more accurate that averaging out the Colors. This formula takes into account that each 
Color is viewed by the human eye at a different brightness.

invertColors
	The invert color function goes through each Pixel with two nested loops, and takes each Color’s rgb value 
and gets the difference between it and 255.

Blend
	Blend takes two images and checks if they are the same resolution. If it is then it continues with the rest 
of the function. The function takes the average of the colors and copies it to the first picture.

fadeToWhite
	This function takes in a Picture and a coordinate. This  coordinate is the location where the image retains 
most of its color. The function puts all the distances from the point to the edge and puts it into a list. A for 
loop then finds the largest number. This number is first multiplied by 1.5 and then divided by 255. This number is 
the number of pixels that have the same color until the color is decremented by 1. This operation ensures that the 
edge of the pixel is faded but a little bit of the color is maintained. The function then calls the recursive function
that does the fading. An enum is used to give the function 5 different modes. This ensures that no Pixel is faded twice.
The function will call the pixel to the left or right, depending on the location of the previous pixel. The function also
calls the pixel above and below it. The functions that go up and down on the picture only call the pixel above or below it,
as any other pixel will already be modified by another function. All of these functions will run until it can’t without an error. 
This will end the function.
